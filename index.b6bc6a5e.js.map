{"mappings":"ACEA,IAAM,EAAO,SAAS,aAAa,CAAC,QAC9B,EAAO,EAAK,aAAa,CAAC,SAEhC,SAAS,EAA2B,CAAI,EAAE,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAY,GAC9C,EAAM,SAAS,aAAa,CAAC,OAUnC,OARA,EAAI,SAAS,CAAC,GAAG,CAAC,WAEd,GACF,EAAI,SAAS,CAAC,GAAG,CAAC,GAGpB,EAAI,SAAS,CAAG,EAET,CACT,CAEA,IAAM,EAAW,IAAI,QAAQ,SAAC,CAA9B,EACE,EAAK,gBAAgB,CAAC,QAAS,WAAM,OAAA,EAAQ,wB,EAC/C,GAEM,EAAW,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAvC,EACE,WAAW,WACT,EAAO,AAAI,MAAM,yBACnB,EAAG,IACL,GAEM,EAAgB,SAAC,CAAvB,EACE,EAAK,MAAM,CAAC,EAA2B,GACzC,EAEM,EAAc,SAAC,CAArB,EACE,EAAK,MAAM,CAAC,EAA2B,EAAM,OAAO,CAAE,iBACxD,EAEA,EAAS,IAAI,CAAC,GAAe,KAAK,CAAC,GACnC,EAAS,IAAI,CAAC,GAAe,KAAK,CAAC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar body = document.querySelector(\"body\");\nvar logo = body.querySelector(\".logo\");\nfunction createPromiseResultElement(text) {\n    var className = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"\";\n    var div = document.createElement(\"div\");\n    div.classList.add(\"message\");\n    if (className) div.classList.add(className);\n    div.innerText = text;\n    return div;\n}\nvar promise1 = new Promise(function(resolve) {\n    logo.addEventListener(\"click\", function() {\n        return resolve(\"Promise was resolved!\");\n    });\n});\nvar promise2 = new Promise(function(resolve, reject) {\n    setTimeout(function() {\n        reject(new Error(\"Promise was rejected!\"));\n    }, 3000);\n});\nvar handleSuccess = function(message) {\n    body.append(createPromiseResultElement(message));\n};\nvar handleError = function(error) {\n    body.append(createPromiseResultElement(error.message, \"error-message\"));\n};\npromise1.then(handleSuccess).catch(handleError);\npromise2.then(handleSuccess).catch(handleError);\n\n//# sourceMappingURL=index.b6bc6a5e.js.map\n","'use strict';\n\nconst body = document.querySelector('body');\nconst logo = body.querySelector('.logo');\n\nfunction createPromiseResultElement(text, className = '') {\n  const div = document.createElement('div');\n\n  div.classList.add('message');\n\n  if (className) {\n    div.classList.add(className);\n  }\n\n  div.innerText = text;\n\n  return div;\n}\n\nconst promise1 = new Promise((resolve) => {\n  logo.addEventListener('click', () => resolve('Promise was resolved!'));\n});\n\nconst promise2 = new Promise((resolve, reject) => {\n  setTimeout(() => {\n    reject(new Error('Promise was rejected!'));\n  }, 3000);\n});\n\nconst handleSuccess = (message) => {\n  body.append(createPromiseResultElement(message));\n};\n\nconst handleError = (error) => {\n  body.append(createPromiseResultElement(error.message, 'error-message'));\n};\n\npromise1.then(handleSuccess).catch(handleError);\npromise2.then(handleSuccess).catch(handleError);\n"],"names":["body","document","querySelector","logo","createPromiseResultElement","text","className","arguments","length","div","createElement","classList","add","innerText","promise1","Promise","resolve","addEventListener","promise2","reject","setTimeout","Error","handleSuccess","message","append","handleError","error","then","catch"],"version":3,"file":"index.b6bc6a5e.js.map"}